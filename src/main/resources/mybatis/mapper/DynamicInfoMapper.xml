<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.djun.tyt.mapper.DynamicInfoMapper">
    <select id="queryAll" resultType="com.djun.tyt.model.DynamicInfo">
        SELECT
            <include refid="DynamicConstantSQL.dynamicInfo"/>
            <include refid="DynamicConstantSQL.dynamicImg"/>
            <include refid="DynamicConstantSQL.dynamicOpenDegree"/>
            <include refid="DynamicConstantSQL.dynamicType"/>
        u.id as userId
        from u_info i
            JOIN u_open_degree iod on i.oid = iod.id
            JOIN t_user u on u.id = i.uid
            LEFT JOIN info_type it on i.fid = it.id
            LEFT JOIN u_info_img ii on i.id = ii.info_id
        order by (i.praise) DESC
    </select>

    <select id="selectedByUserId" resultType="com.djun.tyt.model.DynamicInfo">
        SELECT
            <include refid="DynamicConstantSQL.dynamicInfo"/>
            <include refid="DynamicConstantSQL.dynamicImg"/>
            <include refid="DynamicConstantSQL.dynamicOpenDegree"/>
            <include refid="DynamicConstantSQL.dynamicType"/>
        u.id as userId
        from u_info i
            JOIN u_open_degree iod on i.oid = iod.id
            JOIN t_user u on u.id = i.uid
            LEFT JOIN info_type it on i.fid = it.id
            LEFT JOIN u_info_img ii on i.id = ii.info_id
        where u.id = #{userId}
        order by (i.praise) DESC
    </select>

    <select id="queryDynamic" resultType="com.djun.tyt.model.DynamicInfo">
        select
        <include refid="DynamicConstantSQL.dynamicInfo"/>
        <include refid="DynamicConstantSQL.dynamicImg"/>
        <include refid="DynamicConstantSQL.dynamicOpenDegree"/>
        <include refid="DynamicConstantSQL.dynamicType"/>
        i.id as infoId
        from u_info i
        left join u_info_img ii on i.id=ii.info_id
        left join info_type it on it.id=i.fid
        left join u_open_degree iod on iod.id=i.oid
        where i.uid in(
        select i.uid from u_fans where fan_id=#{id}
        )
    </select>

    <insert id="AddDynamic">
        insert into
          u_info(uid, oid, title, content,fid,create_time)
        values
          (#{userId},#{dynamicOpenDegreeId},#{title},#{content},#{dynamicType},#{dynamicCreateTime})
    </insert>

    <update id="updateDynamic">
        update u_info set title=#{title}, content=#{content},fid=#{dynamicType},update_time=#{dynamicUpdateTime} where id=#{infoId}
    </update>

    <delete id="deleteDynamic">
        delete from u_info where id=#{infoId}
    </delete>
</mapper>